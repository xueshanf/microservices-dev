<VirtualHost *:443>
	ServerAdmin admin@localhost

	ServerName localhost
	ServerAlias fleet-ui.docker.local

	
    ProxyRequests Off
    <Proxy http://fleet-ui:3000>
        Require all Granted
    </Proxy>
   
    ProxyPass /mellon/ !
    ProxyPass /cgi-bin/print_mellon_env !
    ProxyPass /ws/ wss://fleet-ui:3000/ws/
    ProxyPassReverse /ws/ wss://fleet-ui:3000/ws/

    ProxyPass / http://fleet-ui:3000/
    ProxyPassReverse / http://fleet-ui:3000/
	

    <Location "/">
	    Require all granted    
		# Add information from the mod_auth_mellon session to the request.
	    # </Location> block marker will be added by Puppet.
	    Require valid-user
	    AuthType "Mellon"
		
	    MellonEnable "auth"
	    MellonSecureCookie On
	    MellonUser "eduPersonPrincipalName"
	    MellonDecoder "feide"

	    # Configure the SP metadata
	    # This should be the files which were created when creating SP metadata.
	    MellonSPPrivateKeyFile /etc/ssl/private/server.key
	    MellonSPCertFile /etc/ssl/certs/server.crt
	    MellonSPMetadataFile /etc/ssl/auth_mellon/fleet-ui.xml

	    # IdP metadata. This should be the metadata file you got from the IdP.
	    MellonIdPMetadataFile /etc/ssl/auth_mellon/idp_metadata.xml

	    # The location all endpoints should be located under.
	    # It is the URL to this location that is used as the second parameter to the metadata generation script.
	    # This path is relative to the root of the web server.
	    MellonEndpointPath /mellon

	    #  Can be useful if your SP is behind a reverse proxy or any kind of strange network topology making IP address of client
	    # different for the IdP and the SP.
	    MellonSubjectConfirmationDataAddressCheck Off
    </Location>

	CustomLog /dev/stdout combined
	ErrorLog /dev/stderr
	# Possible values include: debug, info, notice, warn, error, crit, alert, emerg.
	LogLevel warn

    ServerSignature Off
    ## SSL directives
    SSLEngine on
    SSLProxyEngine On
    SSLCertificateFile      /etc/ssl/certs/server.crt
    SSLCertificateKeyFile   /etc/ssl/private/server.key
    SSLCACertificatePath    /etc/ssl/certs/
	
</VirtualHost>